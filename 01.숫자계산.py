# 숫자 계산
'''
- 파이싼에서는 슷자의 자료형(종류)에 따라서 계산 결과가 달라질 수 있음
- 파이썬에서는 숫자를 정수(int), 실수(float), 복소수(complex)로 구분
'''

## 정수 계산

### 사칙연산
# 덧셈 +
print(1+1)
print(1+2)
print(1+2+3)
print()

# 뺄셈 -
print(5-1)
print(3-10)
print()

# 곱셈 *
print(2*3)
print(4*9)
print()

# 나누기 /
print(4/2)
print(5/2)
print()

# 파이썬에서는 정수끼리 나눗셈 계산을 하더라도, 실수값을 반환하다
# 몫 : 나머지 없이 나눗셈을 했을 때 정수로 딱 떨어지는 값
# 목 연산자 (//)

'''
- 정수끼리 나눗셈 결과가 실수가 아니라 정수로 나오게 해야할 때 (나머지를 배제해야할 때)
- //로 나눗셈을 하면 됨 
- //는 버림 나눗셈(floor division)이라고 부르며 나눗셈의 결과에서 소수점 이하는 버림
'''
print(5//2, type(5//2))
print()
'''
- 참고로 실수에 //연산자를 사용하면 결과는 실수가 나오지만 소수점이하는 버림 
- 따라서 (연산자 앞 뒤 숫자 중에 하나라도 실수라면) 결과는 항상.0으로 끝남
'''
print(5.5//2, 4//2.0, 4.1//2.1)
print()

#나머지 연산자 %
# 모듈로(modulo) 연산자
print(5&2)
print(8%3)
print()

# 거듭제곱 연산자 **
print(2**9)
print()

# 값을 정수로 만들기 (소수점 없애기)
print()
'''
* 계산 결과가 실수로 나왔을 경우에, 강제로 정수로 만들어야할 때는, 
* int에 괄호를 붙이고, 숫자 또는 계산식을 넣으면 됨)
* 특히 int(...)에 문자열을 넣어도 정수로 만들 수 있음. 단, 정수로 된 문자열 
int(숫자)
int(계산식) ex) int(5/2)
int(문자열) ex) int("1.1"), int("5") 
'''

print(3.3, type(3.3), int(3.3), type(int(3.3)))
print(int(137/29)) # /에 int() = // 몫 연산자와 같은 작용
print()

print("5",type("5"),int("5"),type(int("5")), 5, type(5))
print()

# 몫과 나머지 함께 구하기
print(5/2)
print(5//2, 5%2)
print(divmod(5,2))
print()

# 실수 계산
## 실수끼리의 계산 (실수라고 해서 별도의 연산자를 사용 X)
## 계산하는 대상(피대상자) 중에 하나라도 실수가 들어간다면 무조건 실수처리

## 실수끼리의 덧셈
print(3.5+2.5)
print(4+2.3)
print()

## 실수끼리의 뺄셈
print(3.5-2.5) # 부동소수점
print(4-2.3)
print()
# 컴퓨터는 0,1로 모든 값을 기억한다 -> 2의 배수의 값만 표시 가능
# 10 -> 1010

## 실수끼리의 곱셈
print(4.5 * 2.3)
print(5.6 * 4.2213)
print()

## 실수끼리의 나눗셈
print(5.5 / 3.1)
print()

## 실수와 정수 간의 계산
# - 실수와 정수를 함께 계산하면, 표현 범위가 넓은 실수로 계산됨
print(4.2 +5 +2) # 순서는 상관 없음 . 1개 이상이 실수면 실수임
print()kk

# 값을 실수로 만들기 (float)
'''
- float에 괄호를 붙이고 숫자 또는 계산식을 넣으면 변환 (float(...))
- 특히 float에 '문자열'을 넣어도 실수로 만들 수 있음
- 단, 실수 또는 정수로 된 문자열 
float(숫자), float(계산식), float('문자열')
'''

print(
    float(5), float(1 + 2) , float('5.3'),float('5')
)
print()

# 괄호 사용 - * 계산의 우선순위, 함수의 실행
print(35 + 1 * 2)
# 만약 곱셈보다 덧셈을 먼저 계산하고 싶다면 덧셈부분을 괄호로 묶어주면 됨
# 어떤 연산자든 괄호에 있는 연산자가 우선 연산됨
# ex1) print((35 + 1) * 2)
